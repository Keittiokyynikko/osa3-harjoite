{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","Notification","message","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"oNAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACbJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCezB,EArBA,WACb,IAAMK,EAAUC,IAAMC,IAHR,cAIRC,EAAc,CAClBC,GAAG,IACHN,QAAQ,mCACRO,KAAK,2BACLT,WAAU,GAEZ,OAAOI,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAaxC,EAVA,SAAAO,GAEb,OADgBT,IAAMU,KAdR,aAcsBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAnBF,aAmBE,YAAwBR,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SChBrCK,G,MAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,wGAuHSC,EAlHH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,IAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,IAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAQrBC,qBAAU,WACRC,IAEGxB,MAAK,SAAAyB,GACJT,EAASS,QAEZ,IAID,IAAMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAxC,GAAI,OAAIA,EAAKG,aAkD5BsC,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EACK,KAIP,yBAAKtC,UAAU,SACXsC,IAON,OACE,6BACE,qCACA,kBAACD,EAAD,CAAcC,QAASR,IACvB,6BACE,4BAAQ5B,QAAS,kBAAM2B,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYI,KAAI,SAAC3C,EAAM4C,GAAP,OACf,kBAAC,EAAD,CACEC,IAAKD,EACL5C,KAAMA,EACNC,iBAAkB,kBAlDD,SAACU,GAC1B,IAAMX,EAAO4B,EAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAEpC,KAAOA,KAChCqC,EAAW,2BAAQhD,GAAR,IAAcG,WAAYH,EAAKG,YAEhDkC,EACU1B,EAAIqC,GACXnC,MAAK,SAAAoC,GACJpB,EAASD,EAAMe,KAAI,SAAA3C,GAAI,OAAIA,EAAKW,KAAOA,EAAKX,EAAOiD,SAEpDC,OAAM,SAAAC,GACLhB,EAAgB,SAAD,OACJnC,EAAKK,QADD,sCAGf+C,YAAW,WACTjB,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAO,GAAC,OAAIA,EAAEpC,KAAOA,SAkCR0C,CAAmBrD,EAAKW,WAItD,0BAAM2C,SAvEM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBpD,QAASyB,EACTlB,MAAM,IAAI8C,MAAOC,cACjBxD,UAAWyD,KAAKC,SAAW,IAE7BxB,EACUoB,GACP5C,MAAK,SAAAoC,GACJpB,EAASD,EAAMZ,OAAOiC,IACtBlB,EAAW,SA6DX,2BACE+B,MAAOhC,EACPiC,SAjFmB,SAACR,GACxBS,QAAQC,IAAIV,EAAMW,OAAOJ,OACzB/B,EAAWwB,EAAMW,OAAOJ,UAiFtB,4BAAQK,KAAK,UAAb,SAEF,kBAAC,EAAD,QC5HNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.c3ed55cc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className=\"note\">\r\n    {note.content}\r\n    <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  const nonExisting = {\r\n    id:10000,\r\n    content:'This note is not saved to server',\r\n    date:'2019-05-30T17:30:31.098Z',\r\n    important:true,\r\n  }\r\n  return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }\r\n","import React, {useState, useEffect} from 'react';\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport './index.css'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, Univeristy of Helsinki 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = (props) => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n//Muistiinpanojen haku json-serveriltä\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  //Muistiinpanon tärkeyden arpoja\r\n\r\n    const notesToShow = showAll\r\n      ? notes\r\n      : notes.filter(note => note.important)\r\n\r\n//Muistiinpanojen muutoksen käsittelijä\r\n\r\n    const handleNoteChange = (event) => {\r\n      console.log(event.target.value)\r\n      setNewNote(event.target.value)\r\n    }\r\n\r\n//Muistiinpanon lisäävä komponentti\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5\r\n    }\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n//Muistiinpanon tärkeyden määrittelijä\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important}\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already deleted from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n//Virheilmoituksen komponentti\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n       {message}\r\n    </div>\r\n  )\r\n}\r\n\r\n//Sisällön rendaus\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage}/>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note, i) =>\r\n          <Note\r\n            key={i}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n            />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}